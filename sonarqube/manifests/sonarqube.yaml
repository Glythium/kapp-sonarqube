apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonarqube-sonarqube
  namespace: sonarqube
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-config
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
data:
  sonar.properties: |-
    sonar.core.serverBaseURL=sonarqube.sandbox.futures.army
    sonar.web.sso.enable=true
    sonar.web.sso.loginHeader=X-Forwarded-Email
    sonar.web.sso.nameHeader=X-Forwarded-Preferred-Username
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-copy-plugins
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
data:
  copy_plugins.sh: |-
    #!/bin/bash
    for f in /opt/sonarqube/extensions/plugins/tmp/*.jar
    do
      file=${f##*/} && file=${file%-[0-9]*}
      for original in /opt/sonarqube/extensions/plugins/*.jar
      do
        originalfile=${original##*/} && originalfile=${originalfile%-[0-9]*}
        if [ "$originalfile" == "$file" ]; then
          rm -f "$original"
        fi
      done
    done
    cp /opt/sonarqube/extensions/plugins/tmp/*.jar /opt/sonarqube/extensions/plugins/
    exec /opt/sonarqube/bin/run.sh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-install-plugins
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
data:
  install_plugins.sh: "cd /opt/sonarqube/extensions/plugins/tmp\n  echo \"https://github.com/lequal/sonar-cnes-report/releases/download/3.2.2/sonar-cnes-report-3.2.2.jar\"
    >> plugins.txt\n  echo \"https://github.com/vaulttec/sonar-auth-oidc/releases/download/v2.0.0/sonar-auth-oidc-plugin-2.0.0.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-scm-git-plugin/sonar-scm-git-plugin-1.9.1.1834.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-jacoco-plugin/sonar-jacoco-plugin-1.0.2.475.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-html-plugin/sonar-html-plugin-3.2.0.2082.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-javascript-plugin/sonar-javascript-plugin-6.2.0.12043.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-java-plugin/sonar-java-plugin-6.1.0.20866.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-python-plugin/sonar-python-plugin-2.5.0.5733.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-typescript-plugin/sonar-typescript-plugin-2.1.0.4359.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-scm-svn-plugin/sonar-scm-svn-plugin-1.9.0.1295.jar\"
    >> plugins.txt\n  \n  cat plugins.txt | xargs -n 1 -P 8 wget --no-check-certificate
    --no-verbose\n  rm plugins.txt"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-postgres-config
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
data:
  SONARQUBE_JDBC_USERNAME: sonarUser
  SONARQUBE_JDBC_URL: jdbc:postgresql://sonarqube-db-postgresql:5432/sonarDB
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: generic
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: sonarqube
    release: sonarqube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-6.6.0
    release: sonarqube
    heritage: Helm
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
        release: sonarqube
      annotations:
        checksum/plugins: 23149cf2af7a61542baa2ead4191210a7314d7bf8d6ff59100408776819c7633
        checksum/config: 666a8a0ee76ed7ecd504a86c238ee61bfc55391cacb360daf38d95ec8f8d212c
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: sonarqube-sonarqube
      securityContext:
        fsGroup: 999
      initContainers:
      - name: init-sysctl
        image: busybox:1.31
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        - if [[ "$(sysctl -n vm.max_map_count)" -lt 262144 ]]; then sysctl -w vm.max_map_count=262144;
          fi
      - name: install-plugins
        image: rjkernick/alpine-wget:latest
        command:
        - sh
        - -ec
        - mkdir -p /opt/sonarqube/extensions/plugins/tmp ; cd /opt/sonarqube/extensions/plugins/tmp
          ; rm -f ./* ; sh -e /tmp/scripts/install_plugins.sh ; pwd ; ls -lah
        volumeMounts:
        - mountPath: /opt/sonarqube/extensions/plugins/tmp
          name: sonarqube
          subPath: tmp
        - name: install-plugins
          mountPath: /tmp/scripts/
        resources: {}
      containers:
      - name: sonarqube
        image: sonarqube:8.2-community
        imagePullPolicy: null
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        command:
        - /tmp/scripts/copy_plugins.sh
        env:
        - name: SONARQUBE_WEB_JVM_OPTS
          value: ""
        - name: SONARQUBE_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube-passwords
              key: postgresql-password
        envFrom:
        - configMapRef:
            name: sonarqube-sonarqube-postgres-config
        livenessProbe:
          httpGet:
            path: /sessions/new
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /sessions/new
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 6
        volumeMounts:
        - mountPath: /opt/sonarqube/conf/
          name: config
        - mountPath: /opt/sonarqube/data
          name: sonarqube
          subPath: data
        - mountPath: /opt/sonarqube/extensions/plugins/tmp
          name: sonarqube
          subPath: tmp
        - mountPath: /opt/sonarqube/extensions/downloads
          name: sonarqube
          subPath: downloads
        - mountPath: /opt/sonarqube/temp
          name: sonarqube
          subPath: temp
        - mountPath: /opt/sonarqube/logs
          name: sonarqube
          subPath: logs
        - mountPath: /tmp
          name: tmp-dir
        - name: copy-plugins
          mountPath: /tmp/scripts
        resources: {}
      volumes:
      - name: config
        configMap:
          name: sonarqube-sonarqube-config
          items:
          - key: sonar.properties
            path: sonar.properties
      - name: install-plugins
        configMap:
          name: sonarqube-sonarqube-install-plugins
          items:
          - key: install_plugins.sh
            path: install_plugins.sh
      - name: copy-plugins
        configMap:
          name: sonarqube-sonarqube-copy-plugins
          defaultMode: 493
          items:
          - key: copy_plugins.sh
            path: copy_plugins.sh
      - name: sonarqube
        persistentVolumeClaim:
          claimName: sonarqube-sonarqube
      - name: tmp-dir
        emptyDir: {}
